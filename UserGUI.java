/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package booksort;

import static booksort.Sorting.bookList;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Color;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;



/**
 *
 * @author Caleb
 */
public class UserGUI extends javax.swing.JFrame {

    /**
     * Creates new form UserGUI
     */
    public UserGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    String tmpString = "";
    Boolean currentTheme = true;
    Boolean tableEditable = false;
    Object[] tmpArr = {null, null, null, null, null, null};
    String[] tmpStrArr = {null, null, null, null, null, null};
    String s1 = "";
    String s2 = "";
    String s3 = "";
    String s4 = "";
    String s5 = "";
    String s6 = "";
    int highestInt = 0;
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        bookTable.setEnabled(false);
        jButton2 = new javax.swing.JButton();
        jButton2.putClientProperty( "JButton.buttonType", "help" );
        themeButton = new javax.swing.JButton();
        titleSearch = new javax.swing.JTextField();
        authorSearch = new javax.swing.JTextField();
        genreSearch = new javax.swing.JTextField();
        ISBNSearch = new javax.swing.JTextField();
        refreshButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        bookTable.setAutoCreateRowSorter(true);
        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "2", "3", "4", null, null}
            },
            new String [] {
                "Title", "Author", "Genre", "ISBN", "Availability", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookTable.setShowHorizontalLines(true);
        bookTable.setShowVerticalLines(true);
        bookTable.getTableHeader().setReorderingAllowed(false);
        //DefaultTableModel model = (DefaultTableModel)bookTable.getModel();
        //        model.setRowCount(0);
        //        for (int i = 0; i < bookList.size(); i++){
            //            bookList.get(i);
            //            Object[] tmpArr = {bookList.get(i)[0], bookList.get(i)[1], bookList.get(i)[2], bookList.get(i)[3], Boolean.parseBoolean(bookList.get(i)[4]), Integer.valueOf(bookList.get(i)[5])};
            //            model.addRow(tmpArr);
            //            bookList.get(i);
            //        }
        try {
            Sorting.ID = 0;
            FileReader freader = new FileReader("books.txt");
            BufferedReader reader = new BufferedReader(freader);
            bookList.clear();
            while (tmpString != null) {
                tmpString = reader.readLine();
                if (tmpString != null){
                    String[] tmpStrArr = tmpString.replace("[", "").replace("]", "").split(", ");
                    bookList.add(tmpStrArr);
                    Sorting.ID++;
                }
            }
            reader.close();
            tmpString = "";
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NewGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel model = (DefaultTableModel)bookTable.getModel();
        model.setRowCount(0);
        for (int i = 0; i < bookList.size(); i++){
            bookList.get(i);
            Object[] tmpArr = {bookList.get(i)[0], bookList.get(i)[1], bookList.get(i)[2], bookList.get(i)[3], Boolean.parseBoolean(bookList.get(i)[4]), Integer.valueOf(bookList.get(i)[5])};
            model.addRow(tmpArr);
            bookList.get(i);
        }
        bookTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bookTableFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(bookTable);
        if (bookTable.getColumnModel().getColumnCount() > 0) {
            bookTable.getColumnModel().getColumn(0).setResizable(false);
            bookTable.getColumnModel().getColumn(1).setResizable(false);
            bookTable.getColumnModel().getColumn(2).setResizable(false);
            bookTable.getColumnModel().getColumn(3).setResizable(false);
            bookTable.getColumnModel().getColumn(4).setResizable(false);
            bookTable.getColumnModel().getColumn(5).setResizable(false);
            bookTable.getColumnModel().getColumn(5).setPreferredWidth(0);
        }

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        themeButton.setBackground(new java.awt.Color(0, 0, 1));
        themeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                themeButtonMouseClicked(evt);
            }
        });
        themeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                themeButtonActionPerformed(evt);
            }
        });

        titleSearch.setToolTipText("Search by Title");
        titleSearch.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                titleSearchPropertyChange(evt);
            }
        });
        titleSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                titleSearchKeyPressed(evt);
            }
        });

        authorSearch.setToolTipText("Search by Author");

        genreSearch.setToolTipText("Search by Genre");

        ISBNSearch.setToolTipText("Search by ISBN");

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/booksort/refreshLight.png"))); // NOI18N
        refreshButton.setToolTipText("Refresh Table");
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshButtonMouseClicked(evt);
            }
        });
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/booksort/searchLight.png"))); // NOI18N
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(titleSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(authorSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(genreSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ISBNSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(themeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(themeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(titleSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(authorSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(genreSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ISBNSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void themeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_themeButtonMouseClicked
        if (currentTheme == false) {    // If dark mode
            FlatMacLightLaf.setup();
            com.formdev.flatlaf.FlatLaf.updateUI();
            themeButton.setBackground(Color.black);
            refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/booksort/refreshLight.png")));
            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/booksort/searchLight.png")));
            currentTheme = true;
        } else {                        // If light mode
            FlatMacDarkLaf.setup();
            com.formdev.flatlaf.FlatLaf.updateUI();
            themeButton.setBackground(Color.white);
            refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/booksort/refreshDark.png")));
            searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/booksort/searchDark.png")));
            currentTheme = false;
        }
    }//GEN-LAST:event_themeButtonMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void themeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_themeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_themeButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseClicked
        try {
            Sorting.ID = 0;
            FileReader freader = new FileReader("books.txt");
            BufferedReader reader = new BufferedReader(freader);
            bookList.clear();
            while (tmpString != null) {
		tmpString = reader.readLine();
                if (tmpString != null){
                    String[] tmpStrArr = tmpString.replace("[", "").replace("]", "").split(", ");
                    bookList.add(tmpStrArr);
                    Sorting.ID++;
                }
            }
            reader.close();
            tmpString = "";
        } catch (FileNotFoundException ex) {
            Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultTableModel model = (DefaultTableModel)bookTable.getModel();
        model.setRowCount(0);
        for (int i = 0; i < bookList.size(); i++){
            bookList.get(i);
            Object[] tmpArr = {bookList.get(i)[0], bookList.get(i)[1], bookList.get(i)[2], bookList.get(i)[3], Boolean.parseBoolean(bookList.get(i)[4]), Integer.valueOf(bookList.get(i)[5])};
            model.addRow(tmpArr);
            bookList.get(i);
        }
    }//GEN-LAST:event_refreshButtonMouseClicked

    private void titleSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleSearchKeyPressed
        
    }//GEN-LAST:event_titleSearchKeyPressed

    private void titleSearchPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_titleSearchPropertyChange
        
    }//GEN-LAST:event_titleSearchPropertyChange

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        DefaultTableModel model = (DefaultTableModel)bookTable.getModel();
        model.setRowCount(0);
        for (int i = 0; i < bookList.size(); i++){
            if ((bookList.get(i)[0].toLowerCase().contains(titleSearch.getText().toLowerCase()) || titleSearch.getText().compareTo("") == 0) &&
            (bookList.get(i)[1].toLowerCase().contains(authorSearch.getText().toLowerCase()) || authorSearch.getText().compareTo("") == 0) &&     
            (bookList.get(i)[2].toLowerCase().contains(genreSearch.getText().toLowerCase()) || genreSearch.getText().compareTo("") == 0) &&    
            (bookList.get(i)[3].toLowerCase().contains(ISBNSearch.getText().toLowerCase()) || ISBNSearch.getText().compareTo("") == 0)){
                bookList.get(i);
                Object[] tmpArr = {bookList.get(i)[0], bookList.get(i)[1], bookList.get(i)[2], bookList.get(i)[3], Boolean.parseBoolean(bookList.get(i)[4]), Integer.valueOf(bookList.get(i)[5])};
                model.addRow(tmpArr);
                bookList.get(i);
            }
        }
    }//GEN-LAST:event_searchButtonMouseClicked

    private void bookTableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookTableFocusLost

    }//GEN-LAST:event_bookTableFocusLost

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        System.out.println("Reopening login window...");
        LoginScreen login = new LoginScreen();
        login.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ISBNSearch;
    private javax.swing.JTextField authorSearch;
    private javax.swing.JTable bookTable;
    private javax.swing.JTextField genreSearch;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton themeButton;
    private javax.swing.JTextField titleSearch;
    // End of variables declaration//GEN-END:variables
}
